diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index 13c6bd5..83fac2c 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -1,3 +1,14 @@
 install(DIRECTORY 48x48 scalable DESTINATION "${CMAKE_INSTALL_DATADIR}/icons/hicolor"
+        FILES_MATCHING PATTERN org.fcitx.Fcitx5.*
         PATTERN .* EXCLUDE
         PATTERN *~ EXCLUDE)
+
+foreach (fname rime rime-deploy rime-disable rime-im rime-latin rime-sync)
+  install(FILES 48x48/apps/fcitx-${fname}.png
+           DESTINATION "${CMAKE_INSTALL_DATADIR}/icons/hicolor/48x48/apps"
+           RENAME fcitx5-${fname}.png)
+
+  install(FILES scalable/apps/fcitx-${fname}.svg
+           DESTINATION "${CMAKE_INSTALL_DATADIR}/icons/hicolor/scalable/apps"
+           RENAME fcitx5-${fname}.svg)
+endforeach (fname rime rime-deploy rime-disable rime-im rime-latin rime-sync)
diff --git a/src/rime.conf.in b/src/rime.conf.in
index 604cb06..7ceb3b5 100644
--- a/src/rime.conf.in
+++ b/src/rime.conf.in
@@ -1,6 +1,6 @@
 [InputMethod]
 Name=Rime
-Icon=fcitx-rime
+Icon=fcitx5-rime
 Label=ã„“
 LangCode=zh
 Addon=rime
diff --git a/src/rimeengine.cpp b/src/rimeengine.cpp
index bb5cf5b..94e9273 100644
--- a/src/rimeengine.cpp
+++ b/src/rimeengine.cpp
@@ -93,10 +93,10 @@ public:
         RIME_STRUCT(RimeStatus, status);
         if (state->getStatus(&status)) {
             if (status.is_disabled) {
-                return "fcitx-rime-disabled";
+                return "fcitx5-rime-disabled";
             }
         }
-        return "fcitx-rime-im";
+        return "fcitx5-rime-im";
     }
 
 private:
@@ -107,11 +107,11 @@ RimeEngine::RimeEngine(Instance *instance)
     : instance_(instance), api_(rime_get_api()),
       factory_([this](InputContext &ic) { return new RimeState(this, ic); }) {
     imAction_ = std::make_unique<IMAction>(this);
-    instance_->userInterfaceManager().registerAction("fcitx-rime-im",
+    instance_->userInterfaceManager().registerAction("fcitx5-rime-im",
                                                      imAction_.get());
     imAction_->setMenu(&schemaMenu_);
     eventDispatcher_.attach(&instance_->eventLoop());
-    deployAction_.setIcon("fcitx-rime-deploy");
+    deployAction_.setIcon("fcitx5-rime-deploy");
     deployAction_.setShortText(_("Deploy"));
     deployAction_.connect<SimpleAction::Activated>([this](InputContext *ic) {
         deploy();
@@ -120,10 +120,10 @@ RimeEngine::RimeEngine(Instance *instance)
             state->updateUI(ic, false);
         }
     });
-    instance_->userInterfaceManager().registerAction("fcitx-rime-deploy",
+    instance_->userInterfaceManager().registerAction("fcitx5-rime-deploy",
                                                      &deployAction_);
 
-    syncAction_.setIcon("fcitx-rime-sync");
+    syncAction_.setIcon("fcitx5-rime-sync");
     syncAction_.setShortText(_("Synchronize"));
 
     syncAction_.connect<SimpleAction::Activated>([this](InputContext *ic) {
@@ -133,7 +133,7 @@ RimeEngine::RimeEngine(Instance *instance)
             state->updateUI(ic, false);
         }
     });
-    instance_->userInterfaceManager().registerAction("fcitx-rime-sync",
+    instance_->userInterfaceManager().registerAction("fcitx5-rime-sync",
                                                      &syncAction_);
     reloadConfig();
 }
@@ -358,7 +358,7 @@ void RimeEngine::notify(const std::string &messageType,
     auto notifications = this->notifications();
     if (message && notifications) {
         notifications->call<INotifications::showTip>(
-            "fcitx-rime-deploy", _("Rime"), "fcitx-rime-deploy", _("Rime"),
+            "fcitx5-rime-deploy", _("Rime"), "fcitx5-rime-deploy", _("Rime"),
             message, -1);
     }
     timeEvent_ = instance_->eventLoop().addTimeEvent(
@@ -389,7 +389,7 @@ std::string RimeEngine::subModeLabelImpl(const InputMethodEntry &,
 
 std::string RimeEngine::subModeIconImpl(const InputMethodEntry &,
                                         InputContext &ic) {
-    std::string result = "fcitx-rime";
+    std::string result = "fcitx5-rime";
     if (!api_ || !factory_.registered()) {
         return result;
     }
@@ -397,11 +397,11 @@ std::string RimeEngine::subModeIconImpl(const InputMethodEntry &,
     RIME_STRUCT(RimeStatus, status);
     if (state->getStatus(&status)) {
         if (status.is_disabled) {
-            result = "fcitx-rime-disable";
+            result = "fcitx5-rime-disable";
         } else if (status.is_ascii_mode) {
-            result = "fcitx-rime-latin";
+            result = "fcitx5-rime-latin";
         } else {
-            result = "fcitx-rime";
+            result = "fcitx5-rime";
         }
         api_->free_status(&status);
     }
